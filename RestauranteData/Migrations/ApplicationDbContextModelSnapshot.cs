// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using RestauranteData;

#nullable disable

namespace RestauranteData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestauranteModel.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID");

                    b.Property<string>("Complemento")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATACADASTRO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("NOME");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id");

                    b.ToTable("CLIENTES", (string)null);
                });

            modelBuilder.Entity("RestauranteModel.Entrega", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATAENTREGA");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATASAIDA");

                    b.Property<string>("NomeMotoboy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("NOMEMOTOBOY");

                    b.Property<string>("ObservacoesEntrega")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("OBSERVACOESENTREGA");

                    b.Property<string>("PedidoId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PEDIDOID");

                    b.Property<string>("TelefoneMotoboy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONEMOTOBOY");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId")
                        .IsUnique();

                    b.ToTable("ENTREGAS", (string)null);
                });

            modelBuilder.Entity("RestauranteModel.Pedido", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CLIENTEID");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATAPEDIDO");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("OBSERVACOES");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STATUS");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALORTOTAL");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("PEDIDOS", (string)null);
                });

            modelBuilder.Entity("RestauranteModel.PedidoItem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID");

                    b.Property<string>("PedidoId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PEDIDOID");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECOUNITARIO");

                    b.Property<string>("ProdutoId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PRODUTOID");

                    b.Property<int>("Quantidade")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QUANTIDADE");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PEDIDO_ITENS", (string)null);
                });

            modelBuilder.Entity("RestauranteModel.Produto", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CATEGORIA");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATACADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("DESCRICAO");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("DISPONIVEL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECO");

                    b.HasKey("Id");

                    b.ToTable("PRODUTOS", (string)null);
                });

            modelBuilder.Entity("RestauranteModel.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATACADASTRO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("SENHA");

                    b.HasKey("Id");

                    b.ToTable("USUARIOS", (string)null);
                });

            modelBuilder.Entity("RestauranteModel.Entrega", b =>
                {
                    b.HasOne("RestauranteModel.Pedido", "Pedido")
                        .WithOne("Entrega")
                        .HasForeignKey("RestauranteModel.Entrega", "PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("RestauranteModel.Pedido", b =>
                {
                    b.HasOne("RestauranteModel.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("RestauranteModel.PedidoItem", b =>
                {
                    b.HasOne("RestauranteModel.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestauranteModel.Produto", "Produto")
                        .WithMany("PedidoItens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("RestauranteModel.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("RestauranteModel.Pedido", b =>
                {
                    b.Navigation("Entrega");

                    b.Navigation("Itens");
                });

            modelBuilder.Entity("RestauranteModel.Produto", b =>
                {
                    b.Navigation("PedidoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
